generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String?  @unique
  avatar    String?
  name      String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages         Message[]
  chats            Chat[]
  RelationPlatform RelationIdp[]

  @@map("users")
}

model Idp {
  id               String        @id @default(cuid())
  name             String
  params           Json
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  RelationPlatform RelationIdp[]

  @@map("idp")
}

model RelationIdp {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  idpId     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  idp       Idp      @relation(fields: [idpId], references: [id], onDelete: Cascade)

  @@index([userId, idpId])
  @@map("relation_idps")
}

model Assistant {
  id        String   @id @default(cuid())
  name      String
  mode      String
  apiKey    String?
  baseUrl   String?
  prompt    String?
  models    Json
  options   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]

  @@map("assistants")
}

model Chat {
  id           String     @id @default(cuid())
  title        String
  createdAt    DateTime   @default(now())
  memory       Json?
  updatedAt    DateTime   @updatedAt
  lastChatTime DateTime   @default(now())
  userId       String
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages     Message[]
  assistantId  String?
  provider     Assistant? @relation(fields: [assistantId], references: [id])

  @@index([userId])
  @@index([assistantId])
  @@map("chats")
}

model Message {
  id        String   @id @default(cuid())
  content   String
  role      String // 'user' | 'assistant' | 'system' | 'tool'
  userId    String
  chatId    String
  context   Json?
  createdAt DateTime @default(now())
  files     Json?
  images    Json?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@index([userId, chatId])
  @@map("messages")
}
